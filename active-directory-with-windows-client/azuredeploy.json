{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "10157837901784174684"
    }
  },
  "parameters": {
    "assetLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/pthoor/deploy-azure/main/active-directory-with-windows-client/scripts/",
      "metadata": {
        "description": "This is the location in which all the linked templates are stored."
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "standard",
      "metadata": {
        "description": "Globally unique Vault name must only contain alphanumeric characters and dashes and cannot start with a number."
      }
    },
    "skuCode": {
      "type": "string",
      "defaultValue": "A"
    },
    "logAnalyticsWorkspaceRetention": {
      "type": "int",
      "defaultValue": 30,
      "maxValue": 730,
      "minValue": 30,
      "metadata": {
        "description": "Duration to retain Log Analytics workspace data, in days. Note that the pay-as-you-go pricing tier has a minimum 30-day retention."
      }
    },
    "logAnalyticsWorkspaceDailyQuota": {
      "type": "int",
      "defaultValue": 5,
      "maxValue": 10,
      "minValue": 1,
      "metadata": {
        "description": "Daily quota for Log Analytics workspace data ingestion, in GB."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "localAdmin",
      "metadata": {
        "description": "Username to set for the local User. Cannot be \"Administrator\", \"root\" and possibly other such common account names. "
      }
    },
    "deploymentNumber": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ],
      "metadata": {
        "description": "When deploying the stack N times simultaneously, define the instance - this will be appended to some resource names to avoid collisions."
      }
    },
    "adminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Password for the local administrator account. Cannot be \"P@ssw0rd\" and possibly other such common passwords. Must be 8 characters long and three of the following complexity requirements: uppercase, lowercase, number, special character"
      }
    },
    "adDomainName": {
      "type": "string",
      "defaultValue": "contoso.com",
      "metadata": {
        "description": "Two-part internal AD name - short/NB name will be first part ('contoso')."
      }
    },
    "usersArray": {
      "type": "array",
      "defaultValue": [
        {
          "FName": "Bob",
          "LName": "Jones",
          "SAM": "bjones"
        },
        {
          "FName": "Bill",
          "LName": "Smith",
          "SAM": "bsmith"
        },
        {
          "FName": "Mary",
          "LName": "Phillips",
          "SAM": "mphillips"
        },
        {
          "FName": "Sue",
          "LName": "Jackson",
          "SAM": "sjackson"
        }
      ],
      "metadata": {
        "description": "JSON object array of users that will be loaded into AD once the domain is established."
      }
    },
    "defaultUserPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Enter the password that will be applied to each user account to be created in AD."
      }
    },
    "AdfsFarmCount": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "1",
        "2",
        "3",
        "4",
        "5"
      ],
      "metadata": {
        "description": "An ADFS/WAP server combo will be setup independently this number of times. NOTE: it's unlikely to ever need more than one - additional farm counts are for edge case testing."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2ms",
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_A2M_v2",
        "Standard_A4M_v2",
        "Standard_A4_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms"
      ],
      "metadata": {
        "description": "Select a VM SKU (please ensure the SKU is available in your selected region)."
      }
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The address range of the new virtual network in CIDR format"
      }
    },
    "adSubnetAddressRange": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "The address range of the desired subnet for Active Directory."
      }
    },
    "adIP": {
      "type": "string",
      "defaultValue": "10.0.1.4",
      "metadata": {
        "description": "The IP Addresses assigned to the domain controllers (a, b). Remember the first IP in a subnet is .4 e.g. 10.0.0.0/16 reserves 10.0.0.0-3. Specify one IP per server - must match numberofVMInstances or deployment will fail."
      }
    },
    "adfsIP": {
      "type": "string",
      "defaultValue": "10.0.1.5",
      "metadata": {
        "description": "The IP Addresses assigned to the domain controllers (a, b). Remember the first IP in a subnet is .4 e.g. 10.0.0.0/16 reserves 10.0.0.0-3. Specify one IP per server - must match numberofVMInstances or deployment will fail."
      }
    },
    "dmzSubnetAddressRange": {
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": "The address range of the desired subnet for the DMZ."
      }
    },
    "cliSubnetAddressRange": {
      "type": "string",
      "defaultValue": "10.0.3.0/24",
      "metadata": {
        "description": "The address range of the desired subnet for clients."
      }
    },
    "clientsToDeploy": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "metadata": {
        "description": "ClientsToDeploy, possible values: 1-9."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "automationaccountname": "[format('aa{0}', uniqueString(resourceGroup().id))]",
    "logAnalyticsWorkspaceName": "[format('la{0}', uniqueString(resourceGroup().id))]",
    "adfsDeployCount": "[int(parameters('AdfsFarmCount'))]",
    "networkInterfaceName": "NIC",
    "addcVMNameSuffix": "dc",
    "adfsVMNameSuffix": "fs",
    "wapVMNameSuffix": "px",
    "companyNamePrefix": "[split(parameters('adDomainName'), '.')[0]]",
    "adfsVMName": "[toUpper(format('{0}{1}', variables('companyNamePrefix'), variables('adfsVMNameSuffix')))]",
    "adVMName": "[toUpper(format('{0}{1}', variables('companyNamePrefix'), variables('addcVMNameSuffix')))]",
    "adNSGName": "[format('INT-AD{0}', parameters('deploymentNumber'))]",
    "virtualNetworkName": "[format('{0}{1}-vnet', variables('companyNamePrefix'), parameters('deploymentNumber'))]",
    "adSubnetName": "[format('adSubnet{0}', parameters('deploymentNumber'))]",
    "dmzNSGName": "[format('DMZ-WAP{0}', parameters('deploymentNumber'))]",
    "dmzSubnetName": "[format('dmzSubnet{0}', parameters('deploymentNumber'))]",
    "cliNSGName": "[format('INT-CLI{0}', parameters('deploymentNumber'))]",
    "cliSubnetName": "[format('clientSubnet{0}', parameters('deploymentNumber'))]",
    "publicIPAddressDNSName": "[toLower(format('{0}{1}-adfs', variables('companyNamePrefix'), parameters('deploymentNumber')))]",
    "wapVMName": "[toUpper(format('{0}{1}', variables('companyNamePrefix'), variables('wapVMNameSuffix')))]",
    "adDSCTemplate": "[format('{0}scripts/adDSC.zip', parameters('assetLocation'))]",
    "DeployADFSFarmTemplate": "InstallADFS.ps1",
    "DeployADFSFarmTemplateUri": "[format('{0}Scripts/InstallADFS.ps1', parameters('assetLocation'))]",
    "CopyCertToWAPTemplate": "CopyCertToWAP.ps1",
    "CopyCertToWAPTemplateUri": "[format('{0}Scripts/CopyCertToWAP.ps1', parameters('assetLocation'))]",
    "adDSCConfigurationFunction": "adDSCConfiguration.ps1\\DomainController",
    "subnets": [
      {
        "name": "[variables('adSubnetName')]",
        "properties": {
          "addressprefix": "[parameters('adSubnetAddressRange')]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNSGName'))]"
          }
        }
      },
      {
        "name": "[variables('dmzSubnetName')]",
        "properties": {
          "addressprefix": "[parameters('dmzSubnetAddressRange')]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dmzNSGName'))]"
          }
        }
      },
      {
        "name": "[variables('cliSubnetName')]",
        "properties": {
          "addressprefix": "[parameters('cliSubnetAddressRange')]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('cliNSGName'))]"
          }
        }
      }
    ],
    "adfsDSCTemplate": "[format('{0}DSC/adfsDSC.zip', parameters('assetLocation'))]",
    "adfsDSCConfigurationFunction": "adfsDSCConfiguration.ps1\\Main",
    "wapDSCConfigurationFunction": "wapDSCConfiguration.ps1\\Main",
    "WAPPubIpDnsFQDN": "[format('{0}{{0}}.{1}.cloudapp.azure.com', variables('publicIPAddressDNSName'), toLower(replace(parameters('location'), ' ', '')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/Microsoft.Powershell.DSC', variables('adVMName'))]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "adDSC"
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.83",
        "forceUpdateTag": "1.02",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('adDSCTemplate')]",
          "configurationFunction": "[variables('adDSCConfigurationFunction')]",
          "properties": [
            {
              "Name": "Subject",
              "Value": "[variables('WAPPubIpDnsFQDN')]",
              "TypeName": "System.String"
            },
            {
              "Name": "ADFSFarmCount",
              "Value": "[parameters('AdfsFarmCount')]",
              "TypeName": "System.Integer"
            },
            {
              "Name": "AdminCreds",
              "Value": {
                "UserName": "[parameters('adminUsername')]",
                "Password": "PrivateSettingsRef:AdminPassword"
              },
              "TypeName": "System.Management.Automation.PSCredential"
            },
            {
              "Name": "ADFSIPAddress",
              "Value": "[parameters('adfsIP')]",
              "TypeName": "System.String"
            },
            {
              "Name": "usersArray",
              "Value": "[parameters('usersArray')]",
              "TypeName": "System.Object"
            },
            {
              "Name": "UserCreds",
              "Value": {
                "UserName": "user",
                "Password": "PrivateSettingsRef:UserPassword"
              },
              "TypeName": "System.Management.Automation.PSCredential"
            }
          ]
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('adminPassword')]",
            "UserPassword": "[parameters('defaultUserPassword')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'adVMs')]"
      ]
    },
    {
      "copy": {
        "name": "adfsVMName_1_Microsoft_Powershell_DSC",
        "count": "[length(range(0, variables('adfsDeployCount')))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}{1}/Microsoft.Powershell.DSC', variables('adfsVMName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "adfsDSC"
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.83",
        "autoUpgradeMinorVersion": true,
        "forceUpdateTag": "1.01",
        "settings": {
          "modulesUrl": "[variables('adfsDSCTemplate')]",
          "configurationFunction": "[variables('adfsDSCConfigurationFunction')]",
          "properties": [
            {
              "Name": "AdminCreds",
              "Value": {
                "UserName": "[parameters('adminUsername')]",
                "Password": "PrivateSettingsRef:AdminPassword"
              },
              "TypeName": "System.Management.Automation.PSCredential"
            }
          ]
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('adminPassword')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'adfsVMs')]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', split(format('{0}/Microsoft.Powershell.DSC', variables('adVMName')), '/')[0], split(format('{0}/Microsoft.Powershell.DSC', variables('adVMName')), '/')[1])]"
      ]
    },
    {
      "copy": {
        "name": "adfsVMName_1_InstallADFS",
        "count": "[length(range(0, variables('adfsDeployCount')))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}{1}/InstallADFS', variables('adfsVMName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "DeployADFSFarm"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('DeployADFSFarmTemplateUri')]"
          ],
          "commandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File {0} -Acct {1} -PW {2} -WapFqdn {3}', variables('DeployADFSFarmTemplate'), parameters('adminUsername'), parameters('adminPassword'), variables('WAPPubIpDnsFQDN'))]"
        }
      },
      "dependsOn": [
        "adfsVMName_1_Microsoft_Powershell_DSC"
      ]
    },
    {
      "copy": {
        "name": "wapVMName_1_Microsoft_Powershell_DSC",
        "count": "[length(range(0, variables('adfsDeployCount')))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}{1}/Microsoft.Powershell.DSC', variables('wapVMName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "wapDSCPrep"
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.83",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('adfsDSCTemplate')]",
          "configurationFunction": "[variables('wapDSCConfigurationFunction')]",
          "properties": []
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'adfsVMs')]"
      ]
    },
    {
      "copy": {
        "name": "wapVMName_1_CopyCertToWAP",
        "count": "[length(range(0, variables('adfsDeployCount')))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}{1}/CopyCertToWAP', variables('wapVMName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "ConfigureWAP"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('CopyCertToWAPTemplateUri')]"
          ],
          "commandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File {0} -DCFQDN {1}.{2} -adminuser {3} -password {4} -instance {5} -WapFqdn {6}', variables('CopyCertToWAPTemplate'), variables('adVMName'), parameters('adDomainName'), parameters('adminUsername'), parameters('adminPassword'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1), variables('WAPPubIpDnsFQDN'))]"
        }
      },
      "dependsOn": [
        "adfsVMName_1_InstallADFS",
        "wapVMName_1_Microsoft_Powershell_DSC"
      ]
    },
    {
      "type": "Microsoft.Insights/dataCollectionRules",
      "apiVersion": "2021-09-01-preview",
      "name": "DCR",
      "location": "[parameters('location')]",
      "kind": "Windows",
      "tags": {
        "createdBy": "Sentinel"
      },
      "properties": {
        "dataFlows": [
          {
            "destinations": [
              "[variables('logAnalyticsWorkspaceName')]"
            ],
            "streams": [
              "Microsoft-SecurityEvent"
            ]
          }
        ],
        "dataSources": {
          "windowsEventLogs": [
            {
              "name": "windowsSecurityEventLogs",
              "streams": [
                "Microsoft-SecurityEvent"
              ],
              "xPathQueries": [
                "Security!*[System[(EventID=1) or (EventID=299) or (EventID=300) or (EventID=324) or (EventID=340) or (EventID=403) or (EventID=404) or (EventID=410) or (EventID=411) or (EventID=412) or (EventID=413) or (EventID=431) or (EventID=500) or (EventID=501) or (EventID=1100)]]",
                "Security!*[System[(EventID=1102) or (EventID=1107) or (EventID=1108) or (EventID=4608) or (EventID=4610) or (EventID=4611) or (EventID=4614) or (EventID=4622) or (EventID=4624) or (EventID=4625) or (EventID=4634) or (EventID=4647) or (EventID=4648) or (EventID=4649) or (EventID=4657)]]",
                "Security!*[System[(EventID=4661) or (EventID=4662) or (EventID=4663) or (EventID=4665) or (EventID=4666) or (EventID=4667) or (EventID=4688) or (EventID=4670) or (EventID=4672) or (EventID=4673) or (EventID=4674) or (EventID=4675) or (EventID=4689) or (EventID=4697) or (EventID=4700)]]",
                "Security!*[System[(EventID=4702) or (EventID=4704) or (EventID=4705) or (EventID=4716) or (EventID=4717) or (EventID=4718) or (EventID=4719) or (EventID=4720) or (EventID=4722) or (EventID=4723) or (EventID=4724) or (EventID=4725) or (EventID=4726) or (EventID=4727) or (EventID=4728)]]",
                "Security!*[System[(EventID=4729) or (EventID=4733) or (EventID=4732) or (EventID=4735) or (EventID=4737) or (EventID=4738) or (EventID=4739) or (EventID=4740) or (EventID=4742) or (EventID=4744) or (EventID=4745) or (EventID=4746) or (EventID=4750) or (EventID=4751) or (EventID=4752)]]",
                "Security!*[System[(EventID=4754) or (EventID=4755) or (EventID=4756) or (EventID=4757) or (EventID=4760) or (EventID=4761) or (EventID=4762) or (EventID=4764) or (EventID=4767) or (EventID=4768) or (EventID=4771) or (EventID=4774) or (EventID=4778) or (EventID=4779) or (EventID=4781)]]",
                "Security!*[System[(EventID=4793) or (EventID=4797) or (EventID=4798) or (EventID=4799) or (EventID=4800) or (EventID=4801) or (EventID=4802) or (EventID=4803) or (EventID=4825) or (EventID=4826) or (EventID=4870) or (EventID=4886) or (EventID=4887) or (EventID=4888) or (EventID=4893)]]",
                "Security!*[System[(EventID=4898) or (EventID=4902) or (EventID=4904) or (EventID=4905) or (EventID=4907) or (EventID=4931) or (EventID=4932) or (EventID=4933) or (EventID=4946) or (EventID=4948) or (EventID=4956) or (EventID=4985) or (EventID=5024) or (EventID=5033) or (EventID=5059)]]",
                "Security!*[System[(EventID=5136) or (EventID=5137) or (EventID=5140) or (EventID=5145) or (EventID=5632) or (EventID=6144) or (EventID=6145) or (EventID=6272) or (EventID=6273) or (EventID=6278) or (EventID=6416) or (EventID=6423) or (EventID=6424) or (EventID=8001) or (EventID=8002)]]",
                "Security!*[System[(EventID=8003) or (EventID=8004) or (EventID=8005) or (EventID=8006) or (EventID=8007) or (EventID=8222) or (EventID=26401) or (EventID=30004)]]",
                "Microsoft-Windows-AppLocker/EXE and DLL!*[System[(EventID=8001) or (EventID=8002) or (EventID=8003) or (EventID=8004)]]",
                "Microsoft-Windows-AppLocker/MSI and Script!*[System[(EventID=8005) or (EventID=8006) or (EventID=8007)]]"
              ]
            }
          ]
        },
        "description": "Data collection rule to collect common Windows security events.",
        "destinations": {
          "logAnalytics": [
            {
              "name": "[variables('logAnalyticsWorkspaceName')]",
              "workspaceResourceId": "[reference(resourceId('Microsoft.Resources/deployments', 'microsoftSentinel'), '2020-10-01').outputs.workspaceResourceId.value]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'microsoftSentinel')]"
      ]
    },
    {
      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
      "apiVersion": "2021-04-01",
      "scope": "[format('Microsoft.Compute/virtualMachines/{0}', variables('adVMName'))]",
      "name": "[format('{0}-dcra', 'adVMs')]",
      "properties": {
        "dataCollectionRuleId": "[resourceId('Microsoft.Insights/dataCollectionRules', 'DCR')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'adVMs')]",
        "[resourceId('Microsoft.Insights/dataCollectionRules', 'DCR')]",
        "[resourceId('Microsoft.Resources/deployments', 'microsoftSentinel')]"
      ]
    },
    {
      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
      "apiVersion": "2021-04-01",
      "scope": "[format('Microsoft.Compute/virtualMachines/{0}', 'clientVMs')]",
      "name": "[format('{0}-dcra', 'clientVMs')]",
      "properties": {
        "dataCollectionRuleId": "[resourceId('Microsoft.Insights/dataCollectionRules', 'DCR')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'clientVMs')]",
        "[resourceId('Microsoft.Insights/dataCollectionRules', 'DCR')]",
        "[resourceId('Microsoft.Resources/deployments', 'microsoftSentinel')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "keyVault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[parameters('sku')]"
          },
          "skuCode": {
            "value": "[parameters('skuCode')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "499054808027682741"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The Azure Region to deploy the resources into"
              }
            },
            "sku": {
              "type": "string",
              "metadata": {
                "description": "Key Vault SKU."
              }
            },
            "skuCode": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-10-01",
              "name": "[format('kv{0}', uniqueString(resourceGroup().id))]",
              "location": "[parameters('location')]",
              "properties": {
                "createMode": "default",
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "enableRbacAuthorization": true,
                "enablePurgeProtection": true,
                "sku": {
                  "family": "[parameters('skuCode')]",
                  "name": "[parameters('sku')]"
                },
                "softDeleteRetentionInDays": 7,
                "tenantId": "[subscription().tenantId]"
              }
            }
          ],
          "outputs": {
            "kvUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', format('kv{0}', uniqueString(resourceGroup().id))), '2021-10-01').vaultUri]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "automationaccount",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "automationaccountname": {
            "value": "[variables('automationaccountname')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "18137591385017649753"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The Azure Region to deploy the resources into"
              }
            },
            "automationaccountname": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2022-08-08",
              "name": "[parameters('automationaccountname')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "publicNetworkAccess": true,
                "sku": {
                  "family": "string",
                  "name": "Basic"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2022-08-08",
              "name": "[format('{0}/ActiveDirectoryDsc', parameters('automationaccountname'))]",
              "properties": {
                "contentLink": {
                  "uri": "https://www.powershellgallery.com/api/v2/package/ActiveDirectoryDsc/6.2.0",
                  "version": "6.2.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationaccountname'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2022-08-08",
              "name": "[format('{0}/ComputerManagementDsc', parameters('automationaccountname'))]",
              "properties": {
                "contentLink": {
                  "uri": "https://www.powershellgallery.com/api/v2/package/ComputerManagementDsc/8.5.0",
                  "version": "8.5.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts/modules', split(format('{0}/ActiveDirectoryDsc', parameters('automationaccountname')), '/')[0], split(format('{0}/ActiveDirectoryDsc', parameters('automationaccountname')), '/')[1])]",
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationaccountname'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2022-08-08",
              "name": "[format('{0}/NetworkingDsc', parameters('automationaccountname'))]",
              "properties": {
                "contentLink": {
                  "uri": "https://www.powershellgallery.com/api/v2/package/NetworkingDsc/9.0.0",
                  "version": "9.0.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts/modules', split(format('{0}/ActiveDirectoryDsc', parameters('automationaccountname')), '/')[0], split(format('{0}/ActiveDirectoryDsc', parameters('automationaccountname')), '/')[1])]",
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationaccountname'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/modules', split(format('{0}/ComputerManagementDsc', parameters('automationaccountname')), '/')[0], split(format('{0}/ComputerManagementDsc', parameters('automationaccountname')), '/')[1])]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "virtualNetwork",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "16775699343038758091"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string"
            },
            "virtualNetworkAddressRange": {
              "type": "string",
              "defaultValue": "10.0.0.0/16",
              "metadata": {
                "description": "The address range of the new VNET in CIDR format"
              }
            },
            "subnets": {
              "type": "array"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-07-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "virtualNetwork"
              },
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetworkAddressRange')]"
                  ]
                },
                "subnets": "[parameters('subnets')]"
              }
            }
          ],
          "outputs": {
            "VNet": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '2022-07-01')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'NSGs')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "NSGs",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "deploymentNumber": {
            "value": "[parameters('deploymentNumber')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "7421639541139664852"
            }
          },
          "parameters": {
            "deploymentNumber": {
              "type": "string",
              "defaultValue": "1",
              "metadata": {
                "description": "When deploying the stack N times, define the instance - this will be appended to some resource names to avoid collisions."
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "defaultValue": "vnet",
              "metadata": {
                "description": "Name of the virtual network for this deployment"
              }
            },
            "subnets": {
              "type": "array"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
            "adNSGName_var": "[format('INT-AD{0}', parameters('deploymentNumber'))]",
            "dmzNSGName_var": "[format('DMZ-WAP{0}', parameters('deploymentNumber'))]",
            "cliNSGName_var": "[format('INT-CLI{0}', parameters('deploymentNumber'))]",
            "adSubnetName": "[format('adSubnet{0}', parameters('deploymentNumber'))]",
            "dmzSubnetName": "[format('dmzSubnet{0}', parameters('deploymentNumber'))]",
            "cliSubnetName": "[format('cliSubnet{0}', parameters('deploymentNumber'))]",
            "adsubnetrange": "[parameters('subnets')[0].properties.addressPrefix]",
            "dmzSubnetRange": "[parameters('subnets')[1].properties.addressPrefix]",
            "cliSubnetRange": "[parameters('subnets')[2].properties.addressPrefix]",
            "adSubnetId": "[format('{0}/subnets/{1}', variables('vnetID'), variables('adSubnetName'))]",
            "dmzSubnetId": "[format('{0}/subnets/{1}', variables('vnetID'), variables('dmzSubnetName'))]",
            "cliSubnetId": "[format('{0}/subnets/{1}', variables('vnetID'), variables('cliSubnetName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-07-01",
              "name": "[variables('adNSGName_var')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "adNSG"
              },
              "properties": {
                "securityRules": [
                  {
                    "name": "deny_RDP_from_DMZ",
                    "properties": {
                      "description": "deny RDP to AD Servers from DMZ",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3389",
                      "sourceAddressPrefix": "[variables('dmzSubnetRange')]",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Deny",
                      "priority": 110,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_RDP_to_AD_Servers",
                    "properties": {
                      "description": "Allow RDP to AD Servers",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3389",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_SMTP",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "25",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 121,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_WINS",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "42",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 122,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_Repl",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "135",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 123,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_NetBIOS",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "137",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 124,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_netlogin",
                    "properties": {
                      "description": "Allow AD Communication - DFSN, NetBIOS Session, NetLogon",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "139",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 125,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_LDAP",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "389",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 126,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_LDAP_udp",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "389",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 127,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_LDAPS",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "636",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 128,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_LDAP_GC",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3268-3269",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 129,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_KRB",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "88",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_KRB_udp",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "88",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 131,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_DNS",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "53",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 132,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_DNS_udp",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "53",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 133,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_445",
                    "properties": {
                      "description": "Allow AD Communication - SMB, CIFS,SMB2, DFSN, LSARPC, NbtSS, NetLogonR, SamR, SrvSvc",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "445",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 134,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_445_udp",
                    "properties": {
                      "description": "Allow AD Communication - SMB, CIFS,SMB2, DFSN, LSARPC, NbtSS, NetLogonR, SamR, SrvSvc",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "445",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 135,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_SOAP",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "9389",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 136,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_DFSR",
                    "properties": {
                      "description": "Allow AD Communication - DFSR/Sysvol",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "5722",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 137,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_KRB2",
                    "properties": {
                      "description": "Allow AD Communication - Kerberos change/set password",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "464",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 138,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_KRB2_udp",
                    "properties": {
                      "description": "Allow AD Communication - Kerberos change/set password",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "464",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 139,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_time",
                    "properties": {
                      "description": "Allow AD Communication - Windows Time Protocol",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "123",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 140,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_auth",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "137-138",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 141,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_ephemeral",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "49152-65535",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 142,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_AD_ephemeral_udp",
                    "properties": {
                      "description": "Allow AD Communication",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "49152-65535",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 143,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "deny_AD_Other_TCP",
                    "properties": {
                      "description": "deny remainder of Communications",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Deny",
                      "priority": 200,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "deny_AD_Other_UDP",
                    "properties": {
                      "description": "deny remainder of Communications",
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Deny",
                      "priority": 201,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_HTTPS_vNet",
                    "properties": {
                      "description": "Allow app proxy communication from DMZ",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 199,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_WinRM_vNet",
                    "properties": {
                      "description": "Allow WinRM sessions within the vNet",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "5985-5986",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "[variables('adsubnetrange')]",
                      "access": "Allow",
                      "priority": 198,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-07-01",
              "name": "[variables('dmzNSGName_var')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "DMZNSG"
              },
              "properties": {
                "securityRules": [
                  {
                    "name": "allow_HTTPS_from_Internet",
                    "properties": {
                      "description": "Allow communication between Internet-facing LB and WAP",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "[variables('dmzSubnetRange')]",
                      "access": "Allow",
                      "priority": 102,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_RDP_from_VNet",
                    "properties": {
                      "description": "Allow communication from internal vNet to DMZ",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3389",
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "[variables('dmzSubnetRange')]",
                      "access": "Allow",
                      "priority": 103,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-07-01",
              "name": "[variables('cliNSGName_var')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "CLINSG"
              },
              "properties": {
                "securityRules": [
                  {
                    "name": "allow_to_Internet",
                    "properties": {
                      "description": "Allow communication out to Internet",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "[variables('cliSubnetRange')]",
                      "destinationAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 102,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "allow_all_from_AD",
                    "properties": {
                      "description": "Allow communication in from AD",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "[variables('adsubnetrange')]",
                      "destinationAddressPrefix": "[variables('cliSubnetRange')]",
                      "access": "Allow",
                      "priority": 102,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "allow_RDP",
                    "properties": {
                      "description": "Allow communication from internet to client subnet",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3389",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "[variables('cliSubnetRange')]",
                      "access": "Allow",
                      "priority": 103,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "adVMs",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adIP": {
            "value": "[parameters('adIP')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adDomainName": {
            "value": "[parameters('adDomainName')]"
          },
          "adSubnetName": {
            "value": "[variables('adSubnetName')]"
          },
          "adVMName": {
            "value": "[variables('adVMName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "NetworkInterfaceName": {
            "value": "[variables('networkInterfaceName')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "deploymentNumber": {
            "value": "[parameters('deploymentNumber')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "8665310890671560953"
            }
          },
          "parameters": {
            "adIP": {
              "type": "string",
              "defaultValue": "10.0.1.4",
              "metadata": {
                "description": "The IP Addresses assigned to the domain controllers (a, b). Remember the first IP in a subnet is .4 e.g. 10.0.0.0/16 reserves 10.0.0.0-3. Specify one IP per server - must match numberofVMInstances or deployment will fail.s"
              }
            },
            "adminPassword": {
              "type": "secureString",
              "metadata": {
                "description": "Admin password"
              }
            },
            "adminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin username"
              }
            },
            "DeployADTemplateUri": {
              "type": "string",
              "defaultValue": "https://raw.githubusercontent.com/pthoor/deploy-azure/main/ADDS%20with%20Windows%20Clients/scripts/adDSCConfiguration.ps1",
              "metadata": {
                "description": "Location of scripts"
              }
            },
            "deploymentNumber": {
              "type": "string",
              "defaultValue": "1",
              "metadata": {
                "description": "When deploying the stack N times, define the instance - this will be appended to some resource names to avoid collisions."
              }
            },
            "adSubnetName": {
              "type": "string",
              "defaultValue": "adSubnet"
            },
            "adVMName": {
              "type": "string",
              "defaultValue": "AZAD"
            },
            "adDomainName": {
              "type": "string",
              "defaultValue": "contoso.com"
            },
            "location": {
              "type": "string",
              "metadata": {
                "Description": "The region to deploy the resources into"
              }
            },
            "NetworkInterfaceName": {
              "type": "string",
              "defaultValue": "NIC",
              "metadata": {
                "description": "This is the prefix name of the Network interfaces"
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "defaultValue": "vnet"
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_B2ms",
              "metadata": {
                "description": "This is the allowed list of VM sizes"
              }
            }
          },
          "variables": {
            "imageOffer": "WindowsServer",
            "imagePublisher": "MicrosoftWindowsServer",
            "imageSKU": "2022-datacenter",
            "adPubIPName": "[format('adPubIP{0}', parameters('deploymentNumber'))]",
            "adNicName": "[format('ad-{0}{1}', parameters('NetworkInterfaceName'), parameters('deploymentNumber'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-07-01",
              "name": "[variables('adPubIPName')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "adPubIP"
              },
              "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                  "domainNameLabel": "[toLower(format('{0}{1}', parameters('adVMName'), parameters('deploymentNumber')))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-07-01",
              "name": "[variables('adNicName')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "adNIC"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "[format('ipconfig{0}', parameters('deploymentNumber'))]",
                    "properties": {
                      "privateIPAllocationMethod": "Static",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('adSubnetName'))]"
                      },
                      "privateIPAddress": "[parameters('adIP')]",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('adPubIPName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('adPubIPName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-08-01",
              "name": "[parameters('adVMName')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "adVM"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('adVMName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[variables('imagePublisher')]",
                    "offer": "[variables('imageOffer')]",
                    "sku": "[variables('imageSKU')]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('adNicName'))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('adNicName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-08-01",
              "name": "[format('{0}/Microsoft.Powershell.DSC', parameters('adVMName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.77",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "ModulesUrl": "https://github.com/pthoor/deploy-azure/raw/main/active-directory-with-windows-client/scripts/adDSCConfiguration.zip",
                  "ConfigurationFunction": "adDSCConfiguration.ps1\\Deploy-DomainServices",
                  "Properties": {
                    "domainFQDN": "[parameters('adDomainName')]",
                    "adminCredential": {
                      "UserName": "[parameters('adminUsername')]",
                      "Password": "PrivateSettingsRef:adminPassword"
                    }
                  }
                },
                "protectedSettings": {
                  "Items": {
                    "adminPassword": "[parameters('adminPassword')]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('adVMName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'automationaccount')]",
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "virtualNetworkDNSUpdate",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "dnsIP": {
            "value": "[parameters('adIP')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "14976683102549116891"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "virtualNetworkAddressRange": {
              "type": "string",
              "defaultValue": "10.0.0.0/16",
              "metadata": {
                "description": "The address range of the new VNET in CIDR format"
              }
            },
            "subnets": {
              "type": "array"
            },
            "dnsIP": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-07-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "virtualNetwork"
              },
              "properties": {
                "dhcpOptions": {
                  "dnsServers": [
                    "[parameters('dnsIP')]"
                  ]
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetworkAddressRange')]"
                  ]
                },
                "subnets": "[parameters('subnets')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'adVMs')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "adfsVMs",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assetLocation": {
            "value": "[parameters('assetLocation')]"
          },
          "adfsIP": {
            "value": "[parameters('adfsIP')]"
          },
          "adSubnetName": {
            "value": "[variables('adSubnetName')]"
          },
          "adfsVMName": {
            "value": "[variables('adfsVMName')]"
          },
          "adDomainName": {
            "value": "[parameters('adDomainName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "dmzSubnetName": {
            "value": "[variables('dmzSubnetName')]"
          },
          "dmzNSGName": {
            "value": "[variables('dmzNSGName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "NetworkInterfaceName": {
            "value": "[variables('networkInterfaceName')]"
          },
          "publicIPAddressDNSName": {
            "value": "[variables('publicIPAddressDNSName')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "wapVMName": {
            "value": "[variables('wapVMName')]"
          },
          "deploymentNumber": {
            "value": "[parameters('deploymentNumber')]"
          },
          "AdfsFarmCount": {
            "value": "[parameters('AdfsFarmCount')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "11251218287279188913"
            }
          },
          "parameters": {
            "dmzNSGName": {
              "type": "string",
              "defaultValue": "DMZ-WAP"
            },
            "adSubnetName": {
              "type": "string",
              "defaultValue": "adSubnet"
            },
            "adfsVMName": {
              "type": "string",
              "defaultValue": "AZADFS"
            },
            "adfsIP": {
              "type": "string",
              "defaultValue": "10.0.1.5",
              "metadata": {
                "description": "The IP Addresses assigned to the domain controllers (a, b). Remember the first IP in a subnet is .4 e.g. 10.0.0.0/16 reserves 10.0.0.0-3. Specify one IP per server - must match numberofVMInstances or deployment will fail.s"
              }
            },
            "adDomainName": {
              "type": "string",
              "defaultValue": "contoso.com"
            },
            "adminPassword": {
              "type": "secureString",
              "metadata": {
                "description": "Admin password"
              }
            },
            "adminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin username"
              }
            },
            "deploymentNumber": {
              "type": "string",
              "defaultValue": "1",
              "metadata": {
                "description": "When deploying the stack N times, define the instance - this will be appended to some resource names to avoid collisions."
              }
            },
            "assetLocation": {
              "type": "string"
            },
            "dmzSubnetName": {
              "type": "string",
              "defaultValue": "adSubnet"
            },
            "location": {
              "type": "string",
              "metadata": {
                "Description": "The region to deploy the resources into"
              }
            },
            "NetworkInterfaceName": {
              "type": "string",
              "defaultValue": "NIC",
              "metadata": {
                "description": "This is the prefix name of the Network interfaces"
              }
            },
            "publicIPAddressDNSName": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string",
              "defaultValue": "vnet"
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_B2ms",
              "metadata": {
                "description": "This is the allowed list of VM sizes"
              }
            },
            "wapVMName": {
              "type": "string",
              "defaultValue": "AZPROX"
            },
            "AdfsFarmCount": {
              "type": "string",
              "defaultValue": "1",
              "allowedValues": [
                "1",
                "2",
                "3",
                "4",
                "5"
              ],
              "metadata": {
                "description": "An ADFS/WAP server combo will be setup independently this number of times. NOTE: it's unlikely to ever need more than one - additional farm counts are for edge case testing."
              }
            }
          },
          "variables": {
            "adfsDeployCount": "[int(parameters('AdfsFarmCount'))]",
            "shortDomainName": "[split(parameters('adDomainName'), '.')[0]]",
            "adfsNetworkArr": "[split(parameters('adfsIP'), '.')]",
            "adfsStartIpNodeAddress": "[int(variables('adfsNetworkArr')[3])]",
            "adfsNetworkString": "[format('{0}.{1}.{2}.', variables('adfsNetworkArr')[0], variables('adfsNetworkArr')[1], variables('adfsNetworkArr')[2])]",
            "DSCTemplate": "[format('{0}scripts/adfsDSC.zip', parameters('assetLocation'))]",
            "adfsDSCConfigurationFunction": "adfsDSCConfiguration.ps1\\Main",
            "adfsNICName": "[format('adfs-{0}{1}', parameters('NetworkInterfaceName'), parameters('deploymentNumber'))]",
            "adfsPubIpName": "[format('ADFSPubIP{0}', parameters('deploymentNumber'))]",
            "domainJoinOptions": "3",
            "imageOffer": "WindowsServer",
            "imagePublisher": "MicrosoftWindowsServer",
            "imageSKU": "2012-R2-Datacenter",
            "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
            "wapDSCConfigurationFunction": "wapDSCConfiguration.ps1\\Main",
            "wapNICName": "[format('wap-{0}{1}', parameters('NetworkInterfaceName'), parameters('deploymentNumber'))]",
            "wapPubIpName": "[format('WAPPubIP{0}', parameters('deploymentNumber'))]"
          },
          "resources": [
            {
              "copy": {
                "name": "adfsPubIpName_1",
                "count": "[length(range(0, variables('adfsDeployCount')))]"
              },
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}{1}', variables('adfsPubIpName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "adfsPubIp"
              },
              "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                  "domainNameLabel": "[toLower(format('{0}{1}-{2}', parameters('adfsVMName'), parameters('deploymentNumber'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1)))]"
                }
              }
            },
            {
              "copy": {
                "name": "wapPubIpName_1",
                "count": "[length(range(0, variables('adfsDeployCount')))]"
              },
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}{1}', variables('wapPubIpName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "wapPubIp"
              },
              "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                  "domainNameLabel": "[toLower(format('{0}{1}', parameters('publicIPAddressDNSName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1)))]"
                }
              }
            },
            {
              "copy": {
                "name": "adfsNICName_1",
                "count": "[length(range(0, variables('adfsDeployCount')))]"
              },
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}{1}', variables('adfsNICName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "adfsNIC"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "[format('adfsipconfig{0}{1}', parameters('deploymentNumber'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
                    "properties": {
                      "privateIPAllocationMethod": "Static",
                      "privateIPAddress": "[format('{0}{1}{2}', variables('adfsNetworkString'), range(0, variables('adfsDeployCount'))[copyIndex()], variables('adfsStartIpNodeAddress'))]",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}{1}', variables('adfsPubIpName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1)))]"
                      },
                      "subnet": {
                        "id": "[resourceId(format('{0}/subnets/', variables('vnetID')), format('{0}', parameters('adSubnetName')))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "adfsPubIpName_1"
              ]
            },
            {
              "copy": {
                "name": "wapNICName_1",
                "count": "[length(range(0, variables('adfsDeployCount')))]"
              },
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}{1}', variables('wapNICName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "wapNIC"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "[format('wapipconfig{0}-{1}', parameters('deploymentNumber'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}{1}', variables('wapPubIpName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1)))]"
                      },
                      "subnet": {
                        "id": "[resourceId(format('{0}/subnets/', variables('vnetID')), format('{0}', parameters('dmzSubnetName')))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "wapPubIpName_1"
              ]
            },
            {
              "copy": {
                "name": "adfsVMName_1",
                "count": "[length(range(0, variables('adfsDeployCount')))]"
              },
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-08-01",
              "name": "[format('{0}{1}', parameters('adfsVMName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "adfsVM"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[format('{0}{1}', parameters('adfsVMName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[variables('imagePublisher')]",
                    "offer": "[variables('imageOffer')]",
                    "sku": "[variables('imageSKU')]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}{1}', variables('adfsNICName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1)))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "adfsNICName_1"
              ]
            },
            {
              "copy": {
                "name": "adfsVMName_1_joindomain",
                "count": "[length(range(0, variables('adfsDeployCount')))]"
              },
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-08-01",
              "name": "[format('{0}{1}/joindomain', parameters('adfsVMName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "adfsVMJoin",
                "isClient": "true"
              },
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "Name": "[parameters('adDomainName')]",
                  "OUPath": "",
                  "User": "[format('{0}\\{1}', variables('shortDomainName'), parameters('adminUsername'))]",
                  "Restart": "true",
                  "Options": "[variables('domainJoinOptions')]"
                },
                "protectedSettings": {
                  "Password": "[parameters('adminPassword')]"
                }
              },
              "dependsOn": [
                "adfsVMName_1"
              ]
            },
            {
              "copy": {
                "name": "wapVMName_1",
                "count": "[length(range(0, variables('adfsDeployCount')))]"
              },
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-08-01",
              "name": "[format('{0}{1}', parameters('wapVMName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "wapVM"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[format('{0}{1}', parameters('wapVMName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1))]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[variables('imagePublisher')]",
                    "offer": "[variables('imageOffer')]",
                    "sku": "[variables('imageSKU')]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}{1}', variables('wapNICName'), add(range(0, variables('adfsDeployCount'))[copyIndex()], 1)))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "wapNICName_1"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetworkDNSUpdate')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "clientVMs",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "deploymentNumber": {
            "value": "[parameters('deploymentNumber')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "cliSubnetName": {
            "value": "[variables('cliSubnetName')]"
          },
          "adDomainName": {
            "value": "[parameters('adDomainName')]"
          },
          "clientsToDeploy": {
            "value": "[parameters('clientsToDeploy')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "assetLocation": {
            "value": "[parameters('assetLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "6805426636290185999"
            }
          },
          "parameters": {
            "adminPassword": {
              "type": "secureString",
              "metadata": {
                "description": "Admin password"
              }
            },
            "adminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin username"
              }
            },
            "deploymentNumber": {
              "type": "string",
              "defaultValue": "1",
              "metadata": {
                "description": "When deploying the stack N times, define the instance - this will be appended to some resource names to avoid collisions."
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "defaultValue": "vnet"
            },
            "cliSubnetName": {
              "type": "string",
              "defaultValue": "[format('cliSubnet{0}', parameters('deploymentNumber'))]"
            },
            "adDomainName": {
              "type": "string",
              "defaultValue": "contoso.com"
            },
            "clientsToDeploy": {
              "type": "int"
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_B2ms",
              "metadata": {
                "description": "Select a VM SKU"
              }
            },
            "assetLocation": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "shortDomainName": "[split(parameters('adDomainName'), '.')[0]]",
            "pubIpAddressName": "[toLower(format('cliPubIp{0}{1}', resourceGroup().name, parameters('deploymentNumber')))]",
            "nicName": "[format('nic-{0}-', parameters('deploymentNumber'))]",
            "domainJoinOptions": 3,
            "ConfigRDPUsers": "ConfigRDPUsers.ps1",
            "ConfigRDPUsersUri": "[format('{0}Scripts/ConfigRDPUsers.ps1', parameters('assetLocation'))]"
          },
          "resources": [
            {
              "copy": {
                "name": "pubIpAddressName_1",
                "count": "[length(range(0, parameters('clientsToDeploy')))]"
              },
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}{1}', variables('pubIpAddressName'), add(range(0, parameters('clientsToDeploy'))[copyIndex()], 1))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "ClientPubIP",
                "isClient": "true"
              },
              "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                  "domainNameLabel": "[toLower(format('win{0}-{1}-{2}', range(0, parameters('clientsToDeploy'))[copyIndex()], add(range(0, parameters('clientsToDeploy'))[copyIndex()], 1), uniqueString(resourceGroup().id)))]"
                }
              }
            },
            {
              "copy": {
                "name": "nicName_1",
                "count": "[length(range(0, parameters('clientsToDeploy')))]"
              },
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}{1}', variables('nicName'), add(range(0, parameters('clientsToDeploy'))[copyIndex()], 1))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "ClientNIC",
                "isClient": "true"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}{1})', variables('pubIpAddressName'), add(range(0, parameters('clientsToDeploy'))[copyIndex()], 1)))]"
                      },
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('cliSubnetName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}{1}', variables('pubIpAddressName'), add(range(0, parameters('clientsToDeploy'))[range(0, parameters('clientsToDeploy'))[copyIndex()]], 1)))]"
              ]
            },
            {
              "copy": {
                "name": "cli_Win_ClientsToDeploy_1_deploymentNumber",
                "count": "[length(range(0, parameters('clientsToDeploy')))]"
              },
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-08-01",
              "name": "[format('cli-Win{0}-{1}-{2}', range(0, parameters('clientsToDeploy'))[copyIndex()], add(range(0, parameters('clientsToDeploy'))[copyIndex()], 1), parameters('deploymentNumber'))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "ClientVM",
                "isClient": "true"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[format('win{0}-{1}', range(0, parameters('clientsToDeploy'))[copyIndex()], add(range(0, parameters('clientsToDeploy'))[copyIndex()], 1))]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true
                  }
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsDesktop",
                    "offer": "Windows-11",
                    "sku": "win11-22h2-ent",
                    "version": "latest"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}{1}', variables('nicName'), add(range(0, parameters('clientsToDeploy'))[copyIndex()], 1)))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}{1}', variables('nicName'), add(range(0, parameters('clientsToDeploy'))[range(0, parameters('clientsToDeploy'))[copyIndex()]], 1)))]"
              ]
            },
            {
              "copy": {
                "name": "cli_Win_ClientsToDeploy_1_deploymentNumber_ConfigRDPUsers",
                "count": "[length(range(0, parameters('clientsToDeploy')))]"
              },
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-08-01",
              "name": "[format('cli-Win{0}-{1}-{2}/ConfigRDPUsers', range(0, parameters('clientsToDeploy'))[copyIndex()], add(range(0, parameters('clientsToDeploy'))[copyIndex()], 1), parameters('deploymentNumber'))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "ConfigRDPUsers",
                "isClient": "true"
              },
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "forceUpdateTag": "1.0.1",
                "settings": {
                  "fileUris": [
                    "[variables('ConfigRDPUsersUri')]"
                  ],
                  "commandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File {0}', variables('ConfigRDPUsers'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', format('cli-Win{0}-{1}-{2}', range(0, parameters('clientsToDeploy'))[range(0, parameters('clientsToDeploy'))[copyIndex()]], add(range(0, parameters('clientsToDeploy'))[range(0, parameters('clientsToDeploy'))[copyIndex()]], 1), parameters('deploymentNumber')))]"
              ]
            },
            {
              "copy": {
                "name": "cli_Win_ClientsToDeploy_1_deploymentNumber_joindomain",
                "count": "[length(range(0, parameters('clientsToDeploy')))]"
              },
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-08-01",
              "name": "[format('cli-Win{0}-{1}-{2}/joindomain', range(0, parameters('clientsToDeploy'))[copyIndex()], add(range(0, parameters('clientsToDeploy'))[copyIndex()], 1), parameters('deploymentNumber'))]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "ClientVMJoin",
                "isClient": "true"
              },
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "Name": "[parameters('adDomainName')]",
                  "OUPath": "",
                  "User": "[format('{0}\\{1}', variables('shortDomainName'), parameters('adminUsername'))]",
                  "Restart": "true",
                  "Options": "[variables('domainJoinOptions')]"
                },
                "protectedSettings": {
                  "Password": "[parameters('adminPassword')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', format('cli-Win{0}-{1}-{2}', range(0, parameters('clientsToDeploy'))[range(0, parameters('clientsToDeploy'))[copyIndex()]], add(range(0, parameters('clientsToDeploy'))[range(0, parameters('clientsToDeploy'))[copyIndex()]], 1), parameters('deploymentNumber')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetworkDNSUpdate')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "microsoftSentinel",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logAnalyticsWorkspaceName')]"
          },
          "retentionInDays": {
            "value": "[parameters('logAnalyticsWorkspaceRetention')]"
          },
          "sku": {
            "value": "PerGB2018"
          },
          "dailyQuotaGb": {
            "value": "[parameters('logAnalyticsWorkspaceDailyQuota')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "13033453694542876346"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "retentionInDays": {
              "type": "int"
            },
            "sku": {
              "type": "string"
            },
            "dailyQuotaGb": {
              "type": "int"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "retentionInDays": "[parameters('retentionInDays')]",
                "sku": {
                  "name": "[parameters('sku')]"
                },
                "workspaceCapping": {
                  "dailyQuotaGb": "[parameters('dailyQuotaGb')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[format('SecurityInsights({0})', parameters('logAnalyticsWorkspaceName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              },
              "plan": {
                "name": "[format('SecurityInsights({0})', parameters('logAnalyticsWorkspaceName'))]",
                "product": "OMSGallery/SecurityInsights",
                "publisher": "Microsoft",
                "promotionCode": ""
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            }
          ],
          "outputs": {
            "workspaceResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            }
          }
        }
      }
    }
  ]
}